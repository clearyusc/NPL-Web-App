@using SimpleWebApp.Repository;
@model List<Encounter>
@{
    ViewData["Title"] = "Dashboard";
}

<style>
    .flex-container-row {
        display: flex;
        flex-direction: row;
        justify-content: space-between;
        align-items: baseline;
    }
    .badge-prayer {
        background-color: #e6e6e6 !important;
    }

    .badge-testimony {
        background-color: #269abc !important;
    }

    .badge-gospel {
        background-color: #204d74 !important;
    }

    .badge-red-lights {
        background-color: #d9534f !important;
    }

    .badge-yellow-lights {
        background-color: #f0ad4e !important;
    }

    .badge-green-lights {
        background-color: #5cb85c !important;
    }
</style>
<div class="content-padded">
    <h1>Dashboard Summary</h1>
    <span class="badge badge-prayer">@ViewData["PrayCount"]</span>
    <span class="badge badge-testimony">@ViewData["TestimonyCount"]</span>
    <span class="badge badge-gospel">@ViewData["GospelCount"]</span>
    <span class="badge badge-red-lights">@ViewData["RedCount"]</span>
    <span class="badge badge-yellow-lights">@ViewData["YellowCount"]</span>
    <span class="badge badge-green-lights">@ViewData["GreenCount"]</span>

    <h2>Encounters List</h2>
    <hr />
    <ul class="table-view">
        @foreach (var encounter in Model)
        {
            // todo: move this into a viewmodel
            var textColor = "black";
            switch (encounter.MinistryResponse)
            {
                case MinistryResponse.RedLight:
                    textColor = "#d9534f";
                    break;
                case MinistryResponse.YellowLight:
                    textColor = "#f0ad4e";
                    break;
                case MinistryResponse.GreenLight:
                    textColor = "#5cb85c";
                    break;
                default:
                    textColor = "white";
                    break;
            }

        <li class="table-view-cell" style="background-color:@textColor">
            <a class="navigate-right" href="@Url.Action("ShowEncounterDetail", "Dashboard", Model)" data-transition="slide-in">
                <div class="flex-container-row">
                    <h5>@encounter.PersonEncountered.FirstName</h5>
                </div>
            </a>
        </li>
        }
    </ul>


</div>